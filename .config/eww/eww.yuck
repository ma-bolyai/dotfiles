(defpoll wlan 
  :interval "10s" 
  "wlan_icon"
)
(defpoll bluetooth 
  :interval "10s" 
  "bt_icon"
)
(defpoll BAT0 
  :interval "10s" 
  "batt_icon BAT0"
)
(defpoll BAT1 
  :interval "10s" 
  "batt_icon BAT1"
)
(defpoll time 
  :interval "10s"
  "echo $(date '+%b %d, %H:%M')"
)
(defpoll window
  :interval "1s"
  "bspc query -T -n $(bspc query -N focused -n)"
)

(defwidget bar []
  (centerbox :orientation "h"
    (left)
    (middle)
    (right)
  )
)

(defwidget left []
  (box
    :class "lmao"
    :orientation "h" 
    :space-evenly false 
    :halign "start"
    (box
      (label 
	:class "logo"
	:text "󰣇"
      )
    )
    (box
      (label
	:class "window"
	:text "${window.client.className}"
      )
    )
  )
)

(defwidget workspace [wp symbol]
  (button 
    :onclick "bspc desktop -f ^${wp}"
    (label :class "symbol" :text "${symbol}")
  )
)

(defwidget middle []
  (box 
    :class "ws"
    :orientation "h"
    :space-evenly true
    :halign "center"
    :spacing 10
    (workspace :wp "1" :symbol "一")
    (workspace :wp "2" :symbol "二")
    (workspace :wp "3" :symbol "三")
    (workspace :wp "4" :symbol "四")
    (workspace :wp "5" :symbol "五")
  )
)

(defwidget right []
  (box 
    :class "bruh" 
    :orientation "h" 
    :space-evenly false 
    :halign "end"
    (systray 
      :class "systray"
      :icon-size 20
      :spacing 8
      :space-evenly false
    )
    (box 
      :class "icon"
      bluetooth 
    )
    (box 
      :class "icon"
      wlan
    )
    (box 
      :class "icon" 
      :tooltip "${EWW_BATTERY.BAT0.status}: ${EWW_BATTERY.BAT0.capacity}%"
      BAT0
    )
    (box 
      :class "icon" 
      :tooltip "${EWW_BATTERY.BAT1.status}: ${EWW_BATTERY.BAT1.capacity}%"
      BAT1
    )
    (box 
      :class "time" 
      time
    )
  )
)

(defwidget metric [label value onchange]
  (box 
    :class "metric"
    :orientation "h"
    :space-evenly false
    (box 
      :class "label" 
      label
    )
    (scale 
      :min 0
      :max 101
      :active {onchange != ""}
      :value value
      :onchange onchange
    )
  )
)

(defwindow bar
  :monitor 0
  :stacking "fg"
  :windowtype "dock"
  :wm-ignore false
  :geometry (geometry :x "0%"
    :y "0%"
    :width "100%"
    :height "33px"
    :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (bar)
)
